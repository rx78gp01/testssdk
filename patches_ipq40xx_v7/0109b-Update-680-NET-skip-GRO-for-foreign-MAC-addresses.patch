diff --git a/target/linux/generic/pending-5.15/680-NET-skip-GRO-for-foreign-MAC-addresses.patch b/target/linux/generic/pending-5.15/680-NET-skip-GRO-for-foreign-MAC-addresses.patch
index 66fd6efed5cec..6eb72abaa76fc 100644
--- a/target/linux/generic/pending-5.15/680-NET-skip-GRO-for-foreign-MAC-addresses.patch
+++ b/target/linux/generic/pending-5.15/680-NET-skip-GRO-for-foreign-MAC-addresses.patch
@@ -136,14 +136,14 @@ Signed-off-by: Felix Fietkau <nbd@nbd.name>
  /**
   * eth_type_trans - determine the packet's protocol ID.
   * @skb: received socket data
-@@ -173,6 +185,10 @@ __be16 eth_type_trans(struct sk_buff *sk
- 		} else {
- 			skb->pkt_type = PACKET_OTHERHOST;
- 		}
-+
-+		if (eth_check_local_mask(eth->h_dest, dev->dev_addr,
-+					 dev->local_addr_mask))
-+			skb->gro_skip = 1;
- 	}
+@@ -165,6 +177,10 @@ __be16 eth_type_trans(struct sk_buff *sk
+ 
+ 	eth_skb_pkt_type(skb, dev);
  
++	if (unlikely(!ether_addr_equal_64bits(eth->h_dest, dev->dev_addr)) &&
++	    eth_check_local_mask(eth->h_dest, dev->dev_addr, dev->local_addr_mask))
++		skb->gro_skip = 1;
++
  	/*
+ 	 * Some variants of DSA tagging don't have an ethertype field
+ 	 * at all, so we check here whether one of those tagging
